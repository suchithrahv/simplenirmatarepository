---
apiVersion: "v1"
kind: "Service"
metadata:
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "*"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
    service.beta.kubernetes.io/aws-load-balancer-internal: "0.0.0.0/0"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "must-be-customized"
    service.beta.kubernetes.io/aws-load-balancer-access-log-s3-bucket-prefix: "must-be-customized"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "120"
    service.beta.kubernetes.io/aws-load-balancer-access-log-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "ssl"
    service.beta.kubernetes.io/aws-load-balancer-access-log-emit-interval: "2"
    service.beta.kubernetes.io/aws-load-balancer-access-log-s3-bucket-name: "must-be-customized"
  name: "helloworld"
  labels:
    nirmata.io/application.run: "hello"
    nirmata.io/environment.name: "secure-qa-06"
    nirmata.io/service.name: "helloworld"
    nirmata.io/application.name: "hello-world"
    nirmata.io/component: "helloworld"
spec:
  externalIPs: []
  loadBalancerSourceRanges: []
  type: "ClusterIP"
  selector:
    nirmata.io/application.run: "hello"
    nirmata.io/environment.name: "secure-qa-06"
    nirmata.io/application.name: "hello-world"
    nirmata.io/component: "helloworld"
  ports:
  - port: 80
    protocol: "TCP"

---
kind: "NetworkPolicy"
apiVersion: "extensions/v1beta1"
spec:
  labels:
    nirmata.io/networkpolicy.name: "helloworld"
    nirmata.io/application.run: "hello"
    nirmata.io/environment.name: "secure-qa-06"
    nirmata.io/application.name: "hello-world"
    nirmata.io/component: "helloworld"
  podSelector:
    matchLabels:
      nirmata.io/application.run: "hello"
      nirmata.io/environment.name: "secure-qa-06"
      nirmata.io/application.name: "hello-world"
      nirmata.io/component: "helloworld"
    matchExpressions: []
  policyTypes:
  - "Ingress"
  - "Egress"
  ingress:
  - labels:
      nirmata.io/networkpolicy.name: "helloworld"
      nirmata.io/application.run: "hello"
      nirmata.io/environment.name: "secure-qa-06"
      nirmata.io/application.name: "hello-world"
      nirmata.io/component: "helloworld"
    from:
    - namespaceSelector:
        matchLabels:
          nirmata.io/application.name: "hello-world"
        matchExpressions: []
  egress:
  - {}
metadata:
  annotations: {}
  name: "helloworld"
  labels:
    nirmata.io/networkpolicy.name: "helloworld"
    nirmata.io/application.run: "hello"
    nirmata.io/environment.name: "secure-qa-06"
    nirmata.io/application.name: "hello-world"
    nirmata.io/component: "helloworld"

---
kind: "NetworkPolicy"
apiVersion: "extensions/v1beta1"
spec:
  labels:
    nirmata.io/networkpolicy.name: "hello-world-default"
    nirmata.io/application.run: "hello"
    nirmata.io/environment.name: "secure-qa-06"
    nirmata.io/application.name: "hello-world"
  podSelector:
    matchLabels: {}
    matchExpressions: []
  policyTypes:
  - "Ingress"
  - "Egress"
  egress:
  - {}
metadata:
  annotations: {}
  name: "hello-world-default"
  labels:
    nirmata.io/networkpolicy.name: "hello-world-default"
    nirmata.io/application.name: "hello-world"

---
kind: "Deployment"
apiVersion: "extensions/v1beta1"
metadata:
  annotations: {}
  name: "helloworld"
  labels:
    nirmata.io/deployment.name: "helloworld"
    nirmata.io/application.run: "hello"
    nirmata.io/environment.name: "secure-qa-06"
    nirmata.io/application.name: "hello-world"
    nirmata.io/component: "helloworld"
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      nirmata.io/application.run: "hello"
      nirmata.io/environment.name: "secure-qa-06"
      nirmata.io/application.name: "hello-world"
      nirmata.io/component: "helloworld"
    matchExpressions: []
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations: {}
      name: "helloworld"
      labels:
        nirmata.io/deployment.name: "helloworld"
        nirmata.io/application.run: "hello"
        nirmata.io/environment.name: "secure-qa-06"
        nirmata.io/application.name: "hello-world"
        nirmata.io/component: "helloworld"
    spec:
      terminationGracePeriodSeconds: 30
      nodeSelector: {}
      containers:
      - name: "helloworld"
        image: "nirmata/hello-world:1.9"
        command: []
        args: []
        ports:
        - containerPort: 80
          protocol: "TCP"
